{"version":3,"file":"index.js","sources":["../../node_modules/tslib/tslib.es6.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/verify.ts","../../src/components/TestComponent/TestComponent.tsx","../../src/components/SignInWithBlockinButton/SignInWithBlockinButton.tsx","../../src/components/ChainSelect/ChainSelect.tsx"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { IChainDriver } from './@types/ChainDriver'\r\nimport { ChallengeParams, CreateChallengeOptions, EIP4361Challenge, VerifyChallengeOptions } from './@types/verify'\r\n\r\nconst URI_REGEX: RegExp = /\\w+:(\\/?\\/?)[^\\s]+/;\r\nconst ISO8601_DATE_REGEX: RegExp = /^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(.[0-9]+)?(Z)?$/\r\n\r\nvar chainDriver: IChainDriver\r\n\r\nexport function initializeVerify(driver: IChainDriver) {\r\n    chainDriver = driver\r\n}\r\n\r\n/**\r\n * Creates a challenge that is well-formed according to EIP-4361 - Sign in With Ethereum. Some\r\n * slight modifications to EIP-4361 for our library include 1) any blockchain's native address, signature,\r\n * and verification schemes are supported and 2) in resources, one may prefix an asset with 'Asset ID: '\r\n * to specify micro-authorizations or role-based access using an on-chain asset.\r\n * @param challengeParams - JSON object with the challenge details such as domain, uri, statement, address, etc.\r\n * @param options - JSON object speicfying any additional options when creating the challenge\r\n * @returns Well-formed challenge string to be signed by the user, if successsful. Error string is returned\r\n * upon failure.\r\n */\r\nexport async function createChallenge(challengeParams: ChallengeParams, options?: CreateChallengeOptions) {\r\n    if (options?.useBlockTimestampsForNonce) {\r\n        challengeParams.nonce = await generateNonceWithLastBlockTimestamp();\r\n    }\r\n\r\n    const {\r\n        domain,\r\n        statement,\r\n        address,\r\n        uri,\r\n        nonce,\r\n        version = \"1\",\r\n        chainId = \"1\",\r\n        issuedAt = new Date().toISOString(),\r\n        expirationDate = undefined,\r\n        notBefore = undefined,\r\n        resources = undefined\r\n    } = challengeParams;\r\n\r\n\r\n    try {\r\n        const challenge: EIP4361Challenge = {\r\n            domain,\r\n            statement,\r\n            address,\r\n            uri,\r\n            version,\r\n            chainId,\r\n            nonce,\r\n            issuedAt,\r\n            expirationDate,\r\n            notBefore,\r\n            resources\r\n        }\r\n\r\n        validateChallengeObjectIsWellFormed(challenge); // will throw error if invalid\r\n\r\n        return constructChallengeStringFromChallengeObject(challenge);\r\n    } catch (error: unknown) {\r\n        return `Error: ${error}`;\r\n    }\r\n}\r\n\r\n/**\r\n * verifyChallenge always checks three things: 1) originalChallenge was signed correctly by the user, 2) the\r\n * challenge is still well-formed and valid at the present time, and 3) the user owns all requested assets\r\n * in their wallet upon verification.\r\n * @param originalChallenge - The bytes (Uint8 Array) that were signed that represent the original challenge.\r\n * @param signedChallenge - The result of signing the bytes as a Uint8Array\r\n * @param options - Additional checks to perform when verifying the challenge.\r\n * @returns Returns { message: 'success' } object upon success. Throws an error if challenge is invalid.\r\n */\r\nexport async function verifyChallenge(originalChallenge: Uint8Array, signedChallenge: Uint8Array, options?: VerifyChallengeOptions) {\r\n    const verificationData: any = {};\r\n    const generatedEIP4361ChallengeStr: string = await getChallengeStringFromBytes(originalChallenge);\r\n    const challenge: EIP4361Challenge = constructChallengeObjectFromString(generatedEIP4361ChallengeStr);\r\n\r\n    validateChallengeObjectIsWellFormed(challenge);\r\n    console.log(\"Success: Constructed challenge from string and verified it is well-formed.\");\r\n\r\n    const currDate = new Date();\r\n    verificationData.verificationTime = currDate;\r\n    if (challenge.expirationDate && currDate >= new Date(challenge.expirationDate)) {\r\n        throw `Error: Challenge expired: ${challenge.expirationDate}`\r\n    }\r\n\r\n    if (challenge.notBefore && currDate <= new Date(challenge.notBefore)) {\r\n        throw `Error: Challenge invalid until: ${challenge.notBefore}`\r\n    }\r\n\r\n    const originalAddress = challenge.address;\r\n    await verifyChallengeSignature(originalChallenge, signedChallenge, originalAddress)\r\n    console.log(\"Success: Signature matches address specified within the challenge.\");\r\n\r\n    if (options?.verifyNonceWithBlockTimestamps) {\r\n        let blockTimestamp = await chainDriver.getTimestampForBlock(challenge.nonce);\r\n        verificationData.nonceTimestamp = blockTimestamp;\r\n        const currentTimestamp = Math.round((new Date()).getTime() / 1000);\r\n        const timeLimit = options?.verificationTimeLimit ? options?.verificationTimeLimit : 60;\r\n\r\n        if (blockTimestamp <= currentTimestamp - timeLimit) {\r\n            throw `Error: This challenge uses recent block timestamps for the nonce. The challenge must be verified within ${timeLimit} seconds of creating the challenge`\r\n        }\r\n    }\r\n\r\n    if (options?.expectedDomain && challenge.domain !== options?.expectedDomain) {\r\n        throw `Error: Domain !== ${options?.expectedDomain}`;\r\n    }\r\n\r\n    if (options?.expectedUri && challenge.uri !== options?.expectedUri) {\r\n        throw `Error: Uri !== ${options?.expectedUri}`;\r\n    }\r\n\r\n    if (challenge.resources) {\r\n        const assetLookupData = await verifyOwnershipOfAssets(challenge.address, challenge.resources, options?.assetMinimumBalancesMap, options?.defaultMinimum);\r\n        verificationData.assetLookupData = assetLookupData\r\n    }\r\n\r\n    return {\r\n        message: `Successfully granted access via Blockin`, success: true, verificationData\r\n    }\r\n}\r\n\r\n/**\r\n * Looks up transaction data by ID using the specified chain driver\r\n * @param txnID - Transaction ID broadcasted to the network\r\n * @returns Metadata about the transaction\r\n */\r\nexport async function lookupTransactionById(txnID: string) {\r\n    return await chainDriver.lookupTransactionById(txnID);\r\n}\r\n\r\n/**\r\n * Gets information about a specific asset using sepecified chain driver\r\n * @param assetId - Unique asset identifier\r\n * @returns Metadata about the asset\r\n */\r\nexport async function getAssetDetails(assetId: string) {\r\n    return await chainDriver.getAssetDetails(assetId)\r\n}\r\n\r\n/**\r\n * Generates a nonce using the most recent block index. Can be called directly\r\n * or by specifiying the useBlockTimestampsForNonce flag in the createChallenge\r\n * options. verifyChallenge also offers two flags: (verifyNonceWithBlockTimestamps?: boolean;\r\n * and verificationTimeLimit?: number;) that ensure timestamp of the block was recent when\r\n * verifying. \r\n * @returns Last block index / timestamp / hash to be used as the nonce\r\n */\r\nexport async function generateNonceWithLastBlockTimestamp() {\r\n    const nonce = await chainDriver.getLastBlockIndex()\r\n    return nonce;\r\n}\r\n\r\n/**\r\n * Validates the object is well-formed according to the EIP-4361 interface, plus our additional add-ons\r\n * to the interface for Blockin. \r\n * @param challenge - Valid JSON challenge object\r\n */\r\nexport function validateChallengeObjectIsWellFormed(challenge: EIP4361Challenge) {\r\n    if (!URI_REGEX.test(challenge.domain)) {\r\n        throw `Inputted domain (${challenge.domain}) is not a valid URI`;\r\n    }\r\n\r\n    if (!chainDriver.isValidAddress(challenge.address)) {\r\n        throw `Inputted address (${challenge.address}) is not a valid Algorand address`;\r\n    }\r\n\r\n    if (!URI_REGEX.test(challenge.uri)) {\r\n        throw `Inputted URI (${challenge.uri}) is not a valid URI`;\r\n    }\r\n\r\n    if (!challenge.nonce) {\r\n        throw `No nonce (${challenge.nonce}) specified`;\r\n    }\r\n\r\n    if (!ISO8601_DATE_REGEX.test(challenge.issuedAt)) {\r\n        throw `Issued at date (${challenge.issuedAt}) is not in valid ISO 8601 format`;\r\n    }\r\n\r\n    if (challenge.expirationDate && !ISO8601_DATE_REGEX.test(challenge.expirationDate)) {\r\n        throw `Inputted expiration date (${challenge.expirationDate}) is not in valid ISO 8601 format`;\r\n    }\r\n\r\n    if (challenge.notBefore && !ISO8601_DATE_REGEX.test(challenge.notBefore)) {\r\n        throw `Inputted not before date (${challenge.notBefore}) is not in valid ISO 8601 format`;\r\n    }\r\n\r\n    if (challenge.resources) {\r\n        for (const resource of challenge.resources) {\r\n            if (!resource.startsWith('Asset ID: ') && !URI_REGEX.test(resource)) {\r\n                throw `Inputted resource in resources (${resource}) does not start with 'Asset ID: ' and is not a valid URI`;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Parses a JSON object that specifies the challenge fields and returns a well-formatted EIP-4361 string. \r\n * Note that there is no validity checks on the inputs. It is a precondition that it is well-formed. \r\n * @param challenge - Well-formatted JSON object specifying the EIP-4361 fields.\r\n * @returns - Well-formatted EIP-4361 challenge string to be signed.\r\n */\r\nexport function constructChallengeStringFromChallengeObject(challenge: EIP4361Challenge): string {\r\n    let message = \"\";\r\n    message += `${challenge.domain} wants you to sign in with your Algorand account:\\n`\r\n    message += `${challenge.address}\\n\\n`;\r\n    if (challenge.statement) {\r\n        message += `${challenge.statement}\\n`;\r\n    }\r\n    message += `\\n`;\r\n    message += `URI: ${challenge.uri}\\n`;\r\n    message += `Version: ${challenge.version}\\n`;\r\n    message += `Chain ID: ${challenge.chainId}\\n`;\r\n    message += `Nonce: ${challenge.nonce}\\n`;\r\n    message += `Issued At: ${challenge.issuedAt}`;\r\n    if (challenge.expirationDate) {\r\n        message += `\\nExpiration Time: ${challenge.expirationDate}`;\r\n    }\r\n    if (challenge.notBefore) {\r\n        message += `\\nNot Before: ${challenge.notBefore}\\n`;\r\n    }\r\n    if (challenge.resources) {\r\n        message += `\\nResources:`;\r\n        for (const resource of challenge.resources) {\r\n            message += `\\n- ${resource}`\r\n        }\r\n    }\r\n\r\n    return message;\r\n}\r\n\r\n/**\r\n * This function is called in order to parse the challenge string from the bytes that were signed.\r\n * It is specific to the specified chain driver. This function is needed because most signing\r\n * algorithms add a prefix to the string before signing, so this function attempts to undo that.\r\n * @param txnBytes - Original bytes that were signed as a Uint8Array\r\n * @returns Parses out and returns the challenge string that was signed\r\n */\r\nexport async function getChallengeStringFromBytes(txnBytes: Uint8Array): Promise<string> {\r\n    return chainDriver.getChallengeStringFromBytesToSign(txnBytes);\r\n}\r\n\r\n/**\r\n * Constructs a valid JSON challenge object from a valid well-formed EIP-4361 string. Note this\r\n * doesn't check for validity at all. See the EIP-4361 proposal for more details about exact formatting\r\n * requirements of the string.\r\n * @param challenge - Valid EIP-4361 challenge string\r\n * @returns JSON challenge object with all specified EIP-4361 fields\r\n */\r\nexport function constructChallengeObjectFromString(challenge: string): EIP4361Challenge {\r\n    const messageArray = challenge.split(\"\\n\");\r\n    const domain = messageArray[0].split(' ')[0];\r\n    const address = messageArray[1];\r\n    const statement = messageArray[3];\r\n    const uri = messageArray[5].split(' ')[1];\r\n    const version = messageArray[6].split(':')[1].trim();\r\n    const chainId = messageArray[7].split(':')[1].trim();\r\n    const nonce = messageArray[8].split(':')[1].trim();\r\n    const issuedAt = messageArray[9].split(':').slice(1).join(':').trim();\r\n\r\n    let expirationDate;\r\n    let notBefore;\r\n    let resources = [];\r\n    if (messageArray[10]) {\r\n        if (messageArray[10].indexOf('Expiration Time:') != -1) {\r\n            expirationDate = messageArray[10].split(':').slice(1).join(':').trim();\r\n        } else if (messageArray[10].indexOf('Not Before:') != -1) {\r\n            notBefore = messageArray[10].split(':').slice(1).join(':').trim();\r\n        } else if (messageArray[10].indexOf('Resources:') != -1) {\r\n            resources = [];\r\n            for (let i = 11; i < messageArray.length; i++) {\r\n                const resource = messageArray[i].split(' ').slice(1).join(' ').trim();\r\n                resources.push(resource);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (messageArray[11]) {\r\n        if (messageArray[11].indexOf('Not Before:') != -1) {\r\n            notBefore = messageArray[11].split(':').slice(1).join(':').trim();\r\n        } else if (messageArray[11].indexOf('Resources:') != -1) {\r\n            resources = [];\r\n            for (let i = 12; i < messageArray.length; i++) {\r\n                const resource = messageArray[i].split(' ').slice(1).join(' ').trim();\r\n                resources.push(resource);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (messageArray[12]) {\r\n        if (messageArray[12].indexOf('Resources:') != -1) {\r\n            resources = [];\r\n            for (let i = 13; i < messageArray.length; i++) {\r\n                const resource = messageArray[i].split(' ').slice(1).join(' ').trim();\r\n                resources.push(resource);\r\n            }\r\n        }\r\n    }\r\n\r\n    return { domain, address, statement, expirationDate, notBefore, resources, issuedAt, uri, version, chainId, nonce };\r\n}\r\n\r\n/**\r\n * Verifies a challenge is signed by the given addresses. Throws error if invalid. Specific to \r\n * specified chain driver.\r\n * @param originalChallengeToUint8Array - Uint8Array of the original bytes that were signed\r\n * @param signedChallenge - Uint8Array of the signature bytes\r\n * @param originalAddress - string that specifies the address who signed these bytes\r\n */\r\nexport async function verifyChallengeSignature(originalChallengeToUint8Array: Uint8Array, signedChallenge: Uint8Array, originalAddress: string) {\r\n    await chainDriver.verifySignature(originalChallengeToUint8Array, signedChallenge, originalAddress);\r\n}\r\n\r\n/**\r\n * Gets all asset data for an address. Specific to specified chain driver. Be cautious when using this. It \r\n * may be more efficient to query address' balances for each asset.\r\n * @param address - address of user to lookup asset data for\r\n * @returns Metadata about all a user's owned assets\r\n */\r\nexport async function getAllAssetsForAddress(address: string) {\r\n    return (await chainDriver.getAllAssetsForAddress(address))\r\n}\r\n\r\n/**\r\n * Verifies an address owns all specified resources. Ignores everything that doesn't start with 'Asset ID: '. \r\n * Defaults to succeeding if user has a balance of >= 1 for every asset.  \r\n * @param address - Address to verify\r\n * @param resources - String array of URIs or Asset IDs. This function ignores every resource that doesn't start\r\n * with 'Asset ID: '\r\n * @param assetMinimumBalancesMap - Optional, but here, one can define a JSON object mapping of \r\n * 'assetIDs' => minimumBalances. If assetMinimumBalancesMap[assetId] exists, it will check that the user owns \r\n * more than the specified minimum balance. If not defined, will use the default.\r\n * @param defaultMinimum - Optional. Default is normally set to check if user owns >= 1. Here, you can specify a\r\n * new default minimum for all assets to fallback on if not defined in assetMinimumBalancesMap.\r\n * @returns If successful, verification was successful. Looked up asset data is also returned for convenience. \r\n * Throws error if invalid.\r\n */\r\nexport async function verifyOwnershipOfAssets(address: string, resources: string[], assetMinimumBalancesMap?: any, defaultMinimum?: number) {\r\n    let assetIds: string[] = [];\r\n    if (resources) {\r\n        const filteredAssetIds = resources.filter(elem => elem.startsWith('Asset ID: '));\r\n        for (const assetStr of filteredAssetIds) {\r\n            const assetId = assetStr.substring(10);\r\n            assetIds.push(assetId);\r\n        }\r\n    }\r\n\r\n    const assetLookupData = await chainDriver.verifyOwnershipOfAssets(address, assetIds, assetMinimumBalancesMap, defaultMinimum);\r\n\r\n    return assetLookupData;\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { TestComponentProps } from \"./TestComponent.types\";\r\n\r\nimport \"./TestComponent.scss\";\r\n\r\nimport { constructChallengeStringFromChallengeObject } from \"../../verify\";\r\n// import { setChainDriver } from \"../../blockin\";\r\n// import { AlgoDriver } from \"../../ChainDrivers/AlgoDriver\";\r\n\r\nconst TestComponent: React.FC<TestComponentProps> = ({ heading, content }) => {\r\n    const [testing, setTesting] = useState('');\r\n\r\n    const handleCreateChallenge = async () => {\r\n        // setChainDriver(new AlgoDriver('Testnet'));\r\n        const c = await constructChallengeStringFromChallengeObject({ domain: 'https://blockin.edu', statement: 'asfad', address: 'A3KW6EZITJQTIHIVZUMN2BVG7DBKEBSGEJBIGEXQ4CPBQV6XAUQKZ5RRWA', uri: 'https://blockin.edu', nonce: '123', version: '1', chainId: 'ALL', issuedAt: new Date().toISOString() });\r\n        setTesting(c);\r\n    }\r\n\r\n    return <div data-testid=\"test-component\" className=\"test-component\">\r\n        <h1 data-testid=\"test-component__heading\" className=\"heading\">\r\n            {heading}\r\n            {testing}\r\n            <button onClick={async () => await handleCreateChallenge()}>Click 4 Challenge</button>\r\n        </h1>\r\n        <div data-testid=\"test-component__content\">{content}</div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default TestComponent;\r\n","// Generated with util/create-component.js\nimport React from \"react\";\n\nimport { SignInWithBlockinButtonProps } from \"./SignInWithBlockinButton.types\";\n\nimport \"./SignInWithBlockinButton.scss\";\n\nconst SignInWithBlockinButton: React.FC<SignInWithBlockinButtonProps> = ({ foo }) => (\n    <div data-testid=\"SignInWithBlockinButton\" className=\"foo-bar\">{foo}</div>\n);\n\nexport default SignInWithBlockinButton;\n\n","// Generated with util/create-component.js\nimport React from \"react\";\n\nimport { ChainSelectProps } from \"./ChainSelect.types\";\n\nimport \"./ChainSelect.scss\";\n\nconst ChainSelect: React.FC<ChainSelectProps> = ({ foo }) => (\n    <div data-testid=\"ChainSelect\" className=\"foo-bar\">{foo}</div>\n);\n\nexport default ChainSelect;\n\n"],"names":["useState","React"],"mappings":"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"}