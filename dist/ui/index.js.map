{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/style-inject/dist/style-inject.es.js","../src/verify.ts","../src/ui/SupportedChains.ts","../src/ui/SignInWithBlockinButton/SignInWithBlockinButton.tsx","../src/ui/ChainSelect/ChainSelect.tsx"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { IChainDriver } from './@types/ChainDriver'\r\nimport { ChallengeParams, CreateChallengeOptions, VerifyChallengeOptions } from './@types/verify'\r\n\r\nconst URI_REGEX: RegExp = /\\w+:(\\/?\\/?)[^\\s]+/;\r\nconst ISO8601_DATE_REGEX: RegExp = /^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(.[0-9]+)?(Z)?$/\r\n\r\nvar chainDriver: IChainDriver\r\n\r\nexport function initializeVerify(driver: IChainDriver) {\r\n    chainDriver = driver\r\n}\r\n\r\n/**\r\n * Creates a challenge that is well-formed according to EIP-4361 - Sign in With Ethereum. Some\r\n * slight modifications to EIP-4361 for our library include 1) any blockchain's native address, signature,\r\n * and verification schemes are supported and 2) in resources, one may prefix an asset with 'Asset ID: '\r\n * to specify micro-authorizations or role-based access using an on-chain asset.\r\n * \r\n * \r\n * @param challengeParams - JSON object with the challenge details such as domain, uri, statement, address, etc.\r\n * @param options - JSON object speicfying any additional options when creating the challenge\r\n * @returns Well-formed challenge string to be signed by the user, if successsful. Error string is returned\r\n * upon failure.\r\n */\r\nexport async function createChallenge(challengeParams: ChallengeParams, options?: CreateChallengeOptions): Promise<string> {\r\n    /**\r\n     *  This function should remain completely ChainDriver free. ChainDriver dependencies tend to mess up the\r\n     * React component generation in the browser.\r\n     */\r\n\r\n    const {\r\n        domain,\r\n        statement,\r\n        address,\r\n        uri,\r\n        nonce,\r\n        version = \"1\",\r\n        chainId = \"1\",\r\n        issuedAt = new Date().toISOString(),\r\n        expirationDate = undefined,\r\n        notBefore = undefined,\r\n        resources = undefined\r\n    } = challengeParams;\r\n\r\n    try {\r\n        const challenge: ChallengeParams = {\r\n            domain,\r\n            statement,\r\n            address,\r\n            uri,\r\n            version,\r\n            chainId,\r\n            nonce,\r\n            issuedAt,\r\n            expirationDate,\r\n            notBefore,\r\n            resources\r\n        }\r\n\r\n        validateChallengeObjectIsWellFormed(challenge); // will throw error if invalid\r\n\r\n        return constructChallengeStringFromChallengeObject(challenge);\r\n    } catch (error: unknown) {\r\n        return `Error: ${error}`;\r\n    }\r\n}\r\n\r\n/**\r\n * verifyChallenge always checks three things: 1) originalChallenge was signed correctly by the user, 2) the\r\n * challenge is still well-formed and valid at the present time, and 3) the user owns all requested assets\r\n * in their wallet upon verification.\r\n * @param originalChallenge - The bytes (Uint8 Array) that were signed that represent the original challenge.\r\n * @param signedChallenge - The result of signing the bytes as a Uint8Array\r\n * @param options - Additional checks to perform when verifying the challenge.\r\n * @returns Returns { message: 'success' } object upon success. Throws an error if challenge is invalid.\r\n */\r\nexport async function verifyChallenge(originalChallenge: Uint8Array, signedChallenge: Uint8Array, options?: VerifyChallengeOptions) {\r\n    const verificationData: any = {};\r\n    const generatedEIP4361ChallengeStr: string = await getChallengeStringFromBytes(originalChallenge);\r\n    const challenge: ChallengeParams = constructChallengeObjectFromString(generatedEIP4361ChallengeStr);\r\n\r\n    validateChallengeObjectIsWellFormed(challenge);\r\n    console.log(\"Success: Constructed challenge from string and verified it is well-formed.\");\r\n\r\n    const currDate = new Date();\r\n    verificationData.verificationTime = currDate;\r\n    if (challenge.expirationDate && currDate >= new Date(challenge.expirationDate)) {\r\n        throw `Error: Challenge expired: ${challenge.expirationDate}`\r\n    }\r\n\r\n    if (challenge.notBefore && currDate <= new Date(challenge.notBefore)) {\r\n        throw `Error: Challenge invalid until: ${challenge.notBefore}`\r\n    }\r\n\r\n    const originalAddress = challenge.address;\r\n    await verifyChallengeSignature(originalChallenge, signedChallenge, originalAddress)\r\n    console.log(\"Success: Signature matches address specified within the challenge.\");\r\n\r\n    if (options?.verifyNonceWithBlockTimestamps) {\r\n        let blockTimestamp = await chainDriver.getTimestampForBlock(challenge.nonce);\r\n        verificationData.nonceTimestamp = blockTimestamp;\r\n        const currentTimestamp = Math.round((new Date()).getTime() / 1000);\r\n        const timeLimit = options?.verificationTimeLimit ? options?.verificationTimeLimit : 60;\r\n\r\n        if (blockTimestamp <= currentTimestamp - timeLimit) {\r\n            throw `Error: This challenge uses recent block timestamps for the nonce. The challenge must be verified within ${timeLimit} seconds of creating the challenge`\r\n        }\r\n    }\r\n\r\n    if (options?.expectedDomain && challenge.domain !== options?.expectedDomain) {\r\n        throw `Error: Domain !== ${options?.expectedDomain}`;\r\n    }\r\n\r\n    if (options?.expectedUri && challenge.uri !== options?.expectedUri) {\r\n        throw `Error: Uri !== ${options?.expectedUri}`;\r\n    }\r\n\r\n    if (challenge.resources) {\r\n        const assetLookupData = await verifyOwnershipOfAssets(challenge.address, challenge.resources, options?.assetMinimumBalancesMap, options?.defaultMinimum);\r\n        verificationData.assetLookupData = assetLookupData\r\n    }\r\n\r\n    return {\r\n        message: `Successfully granted access via Blockin`, success: true, verificationData\r\n    }\r\n}\r\n\r\n/**\r\n * Generates a nonce using the most recent block index. Can be called directly\r\n * or by specifiying the useBlockTimestampsForNonce flag in the createChallenge\r\n * options. verifyChallenge also offers two flags: (verifyNonceWithBlockTimestamps?: boolean;\r\n * and verificationTimeLimit?: number;) that ensure timestamp of the block was recent when\r\n * verifying. \r\n * @returns Last block index / timestamp / hash to be used as the nonce\r\n */\r\nexport async function generateNonceWithLastBlockTimestamp() {\r\n    const nonce = await chainDriver.getLastBlockIndex()\r\n    return nonce;\r\n}\r\n\r\n/**\r\n * Validates the object is well-formed according to the EIP-4361 interface, plus our additional add-ons\r\n * to the interface for Blockin. \r\n * @param challenge - Valid JSON challenge object\r\n */\r\nexport function validateChallengeObjectIsWellFormed(challenge: ChallengeParams) {\r\n    if (!URI_REGEX.test(challenge.domain)) {\r\n        throw `Inputted domain (${challenge.domain}) is not a valid URI`;\r\n    }\r\n\r\n    /**\r\n     * We only check for existence of an address here for Rollup React purposes (we don't use ChainDriver's isValidAddress). \r\n     * Will not be able to generate a valid signature with an invalid address, however.\r\n     */\r\n    if (!challenge.address) {\r\n        throw `No address specified or address is invalid`;\r\n    }\r\n\r\n    if (!URI_REGEX.test(challenge.uri)) {\r\n        throw `Inputted URI (${challenge.uri}) is not a valid URI`;\r\n    }\r\n\r\n    if (!challenge.nonce) {\r\n        throw `No nonce (${challenge.nonce}) specified`;\r\n    }\r\n\r\n    if (challenge.issuedAt && !ISO8601_DATE_REGEX.test(challenge.issuedAt)) {\r\n        throw `Issued at date (${challenge.issuedAt}) is not in valid ISO 8601 format`;\r\n    }\r\n\r\n    if (challenge.expirationDate && !ISO8601_DATE_REGEX.test(challenge.expirationDate)) {\r\n        throw `Inputted expiration date (${challenge.expirationDate}) is not in valid ISO 8601 format`;\r\n    }\r\n\r\n    if (challenge.notBefore && !ISO8601_DATE_REGEX.test(challenge.notBefore)) {\r\n        throw `Inputted not before date (${challenge.notBefore}) is not in valid ISO 8601 format`;\r\n    }\r\n\r\n    if (challenge.resources) {\r\n        for (const resource of challenge.resources) {\r\n            if (!resource.startsWith('Asset ID: ') && !URI_REGEX.test(resource)) {\r\n                throw `Inputted resource in resources (${resource}) does not start with 'Asset ID: ' and is not a valid URI`;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Parses a JSON object that specifies the challenge fields and returns a well-formatted EIP-4361 string. \r\n * Note that there is no validity checks on the inputs. It is a precondition that it is well-formed. \r\n * @param challenge - Well-formatted JSON object specifying the EIP-4361 fields.\r\n * @returns - Well-formatted EIP-4361 challenge string to be signed.\r\n */\r\nexport function constructChallengeStringFromChallengeObject(challenge: ChallengeParams): string {\r\n    let message = \"\";\r\n    message += `${challenge.domain} wants you to sign in with your Algorand account:\\n`\r\n    message += `${challenge.address}\\n\\n`;\r\n    if (challenge.statement) {\r\n        message += `${challenge.statement}\\n`;\r\n    }\r\n    message += `\\n`;\r\n    message += `URI: ${challenge.uri}\\n`;\r\n    message += `Version: ${challenge.version}\\n`;\r\n    message += `Chain ID: ${challenge.chainId}\\n`;\r\n    message += `Nonce: ${challenge.nonce}\\n`;\r\n    message += `Issued At: ${challenge.issuedAt}`;\r\n    if (challenge.expirationDate) {\r\n        message += `\\nExpiration Time: ${challenge.expirationDate}`;\r\n    }\r\n    if (challenge.notBefore) {\r\n        message += `\\nNot Before: ${challenge.notBefore}\\n`;\r\n    }\r\n    if (challenge.resources) {\r\n        message += `\\nResources:`;\r\n        for (const resource of challenge.resources) {\r\n            message += `\\n- ${resource}`\r\n        }\r\n    }\r\n\r\n    return message;\r\n}\r\n\r\n/**\r\n * This function is called in order to parse the challenge string from the bytes that were signed.\r\n * It is specific to the specified chain driver. This function is needed because most signing\r\n * algorithms add a prefix to the string before signing, so this function attempts to undo that.\r\n * @param txnBytes - Original bytes that were signed as a Uint8Array\r\n * @returns Parses out and returns the challenge string that was signed\r\n */\r\nasync function getChallengeStringFromBytes(txnBytes: Uint8Array): Promise<string> {\r\n    return chainDriver.getChallengeStringFromBytesToSign(txnBytes);\r\n}\r\n\r\n/**\r\n * Constructs a valid JSON challenge object from a valid well-formed EIP-4361 string. Note this\r\n * doesn't check for validity at all. See the EIP-4361 proposal for more details about exact formatting\r\n * requirements of the string.\r\n * @param challenge - Valid EIP-4361 challenge string\r\n * @returns JSON challenge object with all specified EIP-4361 fields\r\n */\r\nexport function constructChallengeObjectFromString(challenge: string): ChallengeParams {\r\n    const messageArray = challenge.split(\"\\n\");\r\n    const domain = messageArray[0].split(' ')[0];\r\n    const address = messageArray[1];\r\n    const statement = messageArray[3];\r\n    const uri = messageArray[5].split(' ')[1];\r\n    const version = messageArray[6].split(':')[1].trim();\r\n    const chainId = messageArray[7].split(':')[1].trim();\r\n    const nonce = messageArray[8].split(':')[1].trim();\r\n    const issuedAt = messageArray[9].split(':').slice(1).join(':').trim();\r\n\r\n    let expirationDate;\r\n    let notBefore;\r\n    let resources = [];\r\n    if (messageArray[10]) {\r\n        if (messageArray[10].indexOf('Expiration Time:') != -1) {\r\n            expirationDate = messageArray[10].split(':').slice(1).join(':').trim();\r\n        } else if (messageArray[10].indexOf('Not Before:') != -1) {\r\n            notBefore = messageArray[10].split(':').slice(1).join(':').trim();\r\n        } else if (messageArray[10].indexOf('Resources:') != -1) {\r\n            resources = [];\r\n            for (let i = 11; i < messageArray.length; i++) {\r\n                const resource = messageArray[i].split(' ').slice(1).join(' ').trim();\r\n                resources.push(resource);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (messageArray[11]) {\r\n        if (messageArray[11].indexOf('Not Before:') != -1) {\r\n            notBefore = messageArray[11].split(':').slice(1).join(':').trim();\r\n        } else if (messageArray[11].indexOf('Resources:') != -1) {\r\n            resources = [];\r\n            for (let i = 12; i < messageArray.length; i++) {\r\n                const resource = messageArray[i].split(' ').slice(1).join(' ').trim();\r\n                resources.push(resource);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (messageArray[12]) {\r\n        if (messageArray[12].indexOf('Resources:') != -1) {\r\n            resources = [];\r\n            for (let i = 13; i < messageArray.length; i++) {\r\n                const resource = messageArray[i].split(' ').slice(1).join(' ').trim();\r\n                resources.push(resource);\r\n            }\r\n        }\r\n    }\r\n\r\n    return { domain, address, statement, expirationDate, notBefore, resources, issuedAt, uri, version, chainId, nonce };\r\n}\r\n\r\n/**\r\n * Verifies a challenge is signed by the given addresses. Throws error if invalid. Specific to \r\n * specified chain driver.\r\n * @param originalChallengeToUint8Array - Uint8Array of the original bytes that were signed\r\n * @param signedChallenge - Uint8Array of the signature bytes\r\n * @param originalAddress - string that specifies the address who signed these bytes\r\n */\r\nasync function verifyChallengeSignature(originalChallengeToUint8Array: Uint8Array, signedChallenge: Uint8Array, originalAddress: string) {\r\n    await chainDriver.verifySignature(originalChallengeToUint8Array, signedChallenge, originalAddress);\r\n}\r\n\r\n/**\r\n * Verifies an address owns all specified resources. Ignores everything that doesn't start with 'Asset ID: '. \r\n * Defaults to succeeding if user has a balance of >= 1 for every asset.  \r\n * @param address - Address to verify\r\n * @param resources - String array of URIs or Asset IDs. This function ignores every resource that doesn't start\r\n * with 'Asset ID: '\r\n * @param assetMinimumBalancesMap - Optional, but here, one can define a JSON object mapping of \r\n * 'assetIDs' => minimumBalances. If assetMinimumBalancesMap[assetId] exists, it will check that the user owns \r\n * more than the specified minimum balance. If not defined, will use the default.\r\n * @param defaultMinimum - Optional. Default is normally set to check if user owns >= 1. Here, you can specify a\r\n * new default minimum for all assets to fallback on if not defined in assetMinimumBalancesMap.\r\n * @returns If successful, verification was successful. Looked up asset data is also returned for convenience. \r\n * Throws error if invalid.\r\n */\r\nasync function verifyOwnershipOfAssets(address: string, resources: string[], assetMinimumBalancesMap?: any, defaultMinimum?: number) {\r\n    const assetLookupData = await chainDriver.verifyOwnershipOfAssets(address, resources, assetMinimumBalancesMap, defaultMinimum);\r\n    return assetLookupData;\r\n}\r\n","import { SupportedChain } from \"./SignInWithBlockinButton/SignInWithBlockinButton.types\";\r\n\r\n/**\r\n * Gets metadata about the current chain. First, if currentChainInfo is passed, we just return that. \r\n * Next, we check the supported chains map and see if the name passed in matches. If nothing else was \r\n * found, we return a default object.\r\n * @param chainName Name of the current blockchain you would like to get. See SUPPORTED_CHAIN_MAP for\r\n * the natively supported names.\r\n * @param currentChainInfo Optional chain info. Must be of type SupportedChain. If this is defined, we\r\n * just return this\r\n * @returns SupportedChain object containing metadata about the chain.\r\n */\r\nexport const getChain = (chainName: string, currentChainInfo?: SupportedChain): SupportedChain => {\r\n    if (currentChainInfo) return currentChainInfo;\r\n    else if (SUPPORTED_CHAIN_MAP[chainName]) return SUPPORTED_CHAIN_MAP[chainName];\r\n    else return {\r\n        name: chainName,\r\n        logo: 'https://cdn-icons-png.flaticon.com/512/2091/2091665.png',\r\n        getAddressExplorerUrl: (address: string) => ``,\r\n        getAssetExplorerUrl: (asset: string) => ``,\r\n    }\r\n}\r\n\r\nconst SUPPORTED_CHAIN_MAP: any = {\r\n    'Ethereum': {\r\n        name: 'Ethereum',\r\n        logo: 'https://cloudfront-us-east-1.images.arcpublishing.com/coindesk/ZJZZK5B2ZNF25LYQHMUTBTOMLU.png',\r\n        getAddressExplorerUrl: (address: string) => ``,\r\n        getAssetExplorerUrl: (asset: string) => ``,\r\n    },\r\n    'Algorand Mainnet': {\r\n        name: 'Algorand',\r\n        logo: 'https://res.cloudinary.com/startup-grind/image/upload/c_fill,f_auto,g_center,q_auto:good/v1/gcs/platform-data-algorand/contentbuilder/C_Algorand-Event-Thumbnail-400x400_EjNd7dj.png',\r\n        getAddressExplorerUrl: (address: string) => `https://algoexplorer.io/address/${address}`,\r\n        getAssetExplorerUrl: (asset: string) => `https://algoexplorer.io/asset/${asset}`,\r\n    },\r\n    'Algorand Testnet': {\r\n        name: 'Algorand (Testnet)',\r\n        logo: 'https://res.cloudinary.com/startup-grind/image/upload/c_fill,f_auto,g_center,q_auto:good/v1/gcs/platform-data-algorand/contentbuilder/C_Algorand-Event-Thumbnail-400x400_EjNd7dj.png',\r\n        getAddressExplorerUrl: (address: string) => `https://algoexplorer.io/address/${address}`,\r\n        getAssetExplorerUrl: (asset: string) => `https://algoexplorer.io/asset/${asset}`,\r\n    },\r\n}","// Generated with util/create-component.js\nimport React from \"react\";\nimport { SignInWithBlockinButtonProps, PresetAsset, PresetUri, VerifyChallengeOnBackendRequest } from \"./SignInWithBlockinButton.types\";\nimport \"./SignInWithBlockinButton.scss\";\nimport { createChallenge } from \"../../verify\";\nimport { useEffect, useState } from 'react';\nimport { getChain } from '../SupportedChains'\n\n/*\n * Gets the default selected resources from the passed-in props\n * @param assets Assets passed in as props\n * @param uris URIs passed in as props\n * @returns Array of formatted string[] resources\n */\nconst getDefaultSelectedResources = (assets: PresetAsset[], uris: PresetUri[]) => {\n    const selectedResources = [];\n    for (const asset of assets) {\n        if (asset.defaultSelected) {\n            selectedResources.push(`Asset ID: ${asset.assetId}`)\n        }\n    }\n\n    for (const uri of uris) {\n        if (uri.defaultSelected) {\n            selectedResources.push(`${uri.uri}`)\n        }\n    }\n\n    return selectedResources;\n}\n\nconst LockIcon = () => {\n    return <>{'\\uD83D\\uDD12'}</>\n}\n\nconst Link = ({ url, text }: { url: string, text?: string }) => {\n    return <a href={url} target='_blank' rel=\"noreferrer\">{text ? text : url}</a>\n}\n\n/**\n * SignInWithBlockinButton - React Button that handles functionality of creating a Blockin challenge for a user.\n * As props, you can pass in everything needed to generate, sign, and verify the challenge. See the documentation\n * for each prop for more information.\n */\nconst SignInWithBlockinButton: React.FC<SignInWithBlockinButtonProps> = ({\n    challengeParams,\n    displayedAssets = [],\n    displayedUris = [],\n    signChallenge,\n    verifyChallengeOnBackend,\n    generateNonce,\n    currentChain,\n    currentChainInfo,\n    canAddCustomAssets = false,\n    canAddCustomUris = false,\n    customAddResourcesMessage = '',\n}) => {\n    const [modalIsVisible, setModalIsVisible] = useState(false);\n\n    const [selectedResources, setSelectedResources] = useState<string[]>(getDefaultSelectedResources(displayedAssets, displayedUris));\n    const [displayMessage, setDisplayMessage] = useState('');\n    const [chain, setChain] = useState(getChain(currentChain, currentChainInfo));\n    const [assetId, setAssetId] = useState('');\n    const [uri, setUri] = useState('');\n\n    const [advancedIsVisible, setAdvancedIsVisible] = useState(false);\n\n    /**\n     * This will be true when 1) there are no selectable resources passed in by provider and 2) user can not add custom\n     * resources.\n     */\n    const resourcesAreHidden = displayedAssets.length === 0 && displayedUris.length === 0 && !canAddCustomAssets && !canAddCustomUris;\n\n    /**\n     * Adds a resource that was added by the user to selectedResources. Formats in correct Blockin format\n     * for assets vs. URIs.\n     * @param resource ID / text that the user inputted\n     * @param isAssetID If is an asset, we prefix with 'Asset ID: ' to match the Blockin interface \n     */\n    const addCustomResource = async (resource: string, isAssetID?: boolean) => {\n        if (!resource) return;\n        const resourceToAdd = isAssetID ? `Asset ID: ${resource}` : resource\n        const newArr = [...selectedResources, resourceToAdd]\n        setSelectedResources(newArr);\n    }\n\n    /**\n     * Upon chain change, update chain metadata and props\n     */\n    useEffect(() => {\n        setChain(getChain(currentChain, currentChainInfo));\n    }, [currentChain]);\n\n    /**\n     * Handles a user clicking the sign in button on the popup modal.\n     */\n    const handleSignIn = async () => {\n        /**\n         * Generate the challenge object by attempting to call generateNonce() and inputting\n         * the selectedResources\n         */\n        const nonce = generateNonce ? await generateNonce() : challengeParams.nonce;\n        const challenge = {\n            ...challengeParams,\n            resources: selectedResources,\n            nonce\n        };\n\n        /**\n         * Call Blockin to create the challenge string.\n         */\n        const challengeString = await createChallenge(challenge);\n\n        /**\n         * Sign the challenge using the passed in signChallenge() props function\n         * \n         * Expects { originalBytes: Uint8Array, signatureBytes: Uint8Array }\n         */\n        const signChallengeResponse: VerifyChallengeOnBackendRequest = await signChallenge(challengeString);\n\n        /**\n         * Verify the challenge using the passed in verifyChallenge() props function. Note that this \n         * isn't Blockin's verifyChallenge(). This should be called by your backend with an API key within\n         * this function.\n         * \n         * Expects { success: boolean, message: string }\n         */\n        const { success, message } = await verifyChallengeOnBackend(signChallengeResponse);\n\n        /**\n         * Handle success / failure\n         */\n        if (!success) {\n            setDisplayMessage(message);\n        } else {\n            setDisplayMessage('');\n            setSelectedResources(getDefaultSelectedResources(displayedAssets, displayedUris));\n            setModalIsVisible(false);\n        }\n    }\n\n    const generateHumanReadableTimeDetails = (notBefore?: string, expirationDate?: string) => {\n        if (!notBefore && !expirationDate) {\n            return 'This sign-in attempt has no expiration date.';\n        }\n        else if (notBefore && !expirationDate) {\n            return `This sign-in attempt has no expiration date but is not valid until ${notBefore}.`\n        }\n        else if (!notBefore && expirationDate) {\n            return `This sign-in attempt expires at ${expirationDate}.`\n        }\n        else {\n            return `This sign-in attempt expires at ${expirationDate} and is not valid until ${notBefore}.`\n        }\n    }\n\n\n    return <div className='blockin-global'>\n        {/* Main Sign In Button */}\n        <button className='blockin-button main-button' onClick={() => setModalIsVisible(!modalIsVisible)}>\n            Sign In with Blockin\n        </button>\n\n        {/* Popup Modal Once Clicked */}\n        {modalIsVisible && <>\n            <section className='blockin-root' >\n                <div className=\"blockin-popup-container\">\n                    <div className=\"blockin-popup\">\n                        {/* Header with the Close Button */}\n                        <header className='blockin-header'>\n                            <span className=\"header-end\">\n\n                            </span>\n                            <section className=\"header-middle\">\n                                {/* Title and Chain Logo */}\n\n                                <h1>Sign In with Blockin!</h1>\n                                <div className='blockin-header-chain-info'>\n                                    <div>\n                                        <img src={chain.logo} height='100px' width='auto' />\n                                        <h5>{chain.name}</h5>\n                                    </div>\n                                    <div>\n                                        <b>X</b>\n                                    </div>\n                                    <div>\n                                        <img src={'https://avatars.githubusercontent.com/u/105506360?s=200&v=4'} height='100px' width='auto' />\n                                        <h5>Blockin</h5>\n                                    </div>\n                                </div>\n\n\n                            </section>\n\n                            <span className=\"header-end\">\n                                {/* Close Button */}\n                                <button className='blockin-closebutton' onClick={() => { setModalIsVisible(!modalIsVisible) }} >\n                                    {/* CloseIcon SVG */}\n                                    <svg width={25} height={25} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\n                                        <path d=\"M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z\" />\n                                    </svg>\n                                </button>\n                            </span>\n                        </header>\n                        <hr />\n                        {/* Challenge Details */}\n                        <div className='blockin-challenge'>\n                            <h3>Sign-In Details</h3>\n                            <div className='blockin-challenge-details'>\n\n                                <p><b>\n                                    <Link url={challengeParams.uri} />\n                                </b></p>\n                                <p><b>\n                                    <Link url={challengeParams.domain} /> wants you to sign in with your {chain.name} account: {<Link text={challengeParams.address} url={chain.getAddressExplorerUrl(challengeParams.address)} />}\n                                </b></p>\n                                <p><b>{challengeParams.statement}</b></p>\n                                {challengeParams.issuedAt && <><p><b>This sign-in attempt was issued at {challengeParams.issuedAt}</b></p></>}\n                                <p><b>{generateHumanReadableTimeDetails(challengeParams.notBefore, challengeParams.expirationDate)}</b></p>\n\n\n                                {/* Would probably be nice to have an \"Advanced\" section here where the user can see all of the below fields which 99% wont understand */}\n                                {/* Don't show if undefined */}\n                            </div>\n                            <hr />\n                            <div>\n                                <h3>Advanced Sign-In Details</h3>\n                                <button className=\"blockin-button\" onClick={() => setAdvancedIsVisible(!advancedIsVisible)}>\n                                    {advancedIsVisible ? 'Hide' : 'Show'}\n                                </button>\n                                {advancedIsVisible && <div>\n                                    <p><b>Nonce: {generateNonce ? 'Nonce will be generated upon clicking sign-in.' : challengeParams.nonce}</b></p>\n                                    <p><b>Chain ID: {challengeParams.chainId ? challengeParams.chainId : '1 (Default)'}</b></p>\n                                    <p><b>Version: {challengeParams.version ? challengeParams.version : '1 (Default)'}</b></p>\n                                </div>\n                                }\n                            </div>\n                        </div>\n                        <hr />\n                        {/* Challenge Resources Preset According to Props */}\n                        <div className='blockin-preset-resources'>\n                            {!resourcesAreHidden && <>\n                                {(displayedAssets.length !== 0 || displayedUris.length !== 0) && <>\n                                    <h3>Select Resources</h3>\n                                    {<p>Select the resources you would like to receive access to:</p>}\n\n                                    {/* First display selectable assets */}\n                                    {displayedAssets.map(elem => {\n                                        return <>\n                                            <hr />\n                                            <div className='blockin-listitem'>\n                                                {/* Metadata includes 1) chain logo, 2) asset name, 3) link to asset, and \n                                                4) desccription of asset\n                                             */}\n                                                <div className='blockin-listitem-metadata'>\n                                                    <div className='blockin-listitem-logo'>\n                                                        <img src={chain.logo} height='50px' width='auto' />\n                                                    </div>\n                                                    <div>\n                                                        <b>{elem.name}</b>\n                                                        <br />\n                                                        Asset ID:{' '}\n                                                        <Link\n                                                            url={`https://testnet.algoexplorer.io/asset/${elem.assetId}`}\n                                                            text={elem.assetId}\n                                                        /> - {elem.description}\n                                                    </div>\n                                                </div>\n\n                                                {/* Button allows user to select / deselect asset. Uses passed in 'frozen' and 'defaultSelected'\n                                                fields to allow / disable selecting. */}\n                                                <div className='blockin-listitem-button'>\n                                                    {selectedResources.includes(`Asset ID: ${elem.assetId}`) ?\n                                                        <button\n                                                            className='blockin-button'\n                                                            onClick={() => {\n                                                                const newArr = selectedResources.filter(resource => resource !== `Asset ID: ${elem.assetId}`)\n                                                                setSelectedResources(newArr);\n                                                            }}\n                                                            disabled={elem.frozen}\n                                                        >\n                                                            Selected {elem.frozen && <LockIcon />}\n                                                        </button> :\n                                                        <button\n                                                            className='blockin-button'\n                                                            disabled={elem.frozen}\n                                                            onClick={() => {\n                                                                const newArr = [...selectedResources, `Asset ID: ${elem.assetId}`]\n                                                                setSelectedResources(newArr);\n                                                            }}\n                                                        >\n                                                            Not Selected {elem.frozen && <LockIcon />}\n                                                        </button>\n                                                    }\n                                                </div>\n                                            </div>\n                                        </>\n                                    })}\n\n                                    {/* Display selectable URIs */}\n                                    {displayedUris.map(elem => {\n                                        return <>\n                                            <hr />\n                                            <div className='blockin-listitem'>\n                                                {/* Metadata includes 1) chain logo, 2) asset name, 3) link to asset, and \n                                                4) desccription of asset\n                                             */}\n                                                <div className='blockin-listitem-metadata'>\n                                                    <div className='blockin-listitem-logo'>\n                                                        <img src='https://cdn1.iconfinder.com/data/icons/color-bold-style/21/43-512.png' height='auto' width='50px' />\n                                                    </div>\n                                                    <div>\n                                                        <b>{elem.name}</b>\n                                                        <br />\n                                                        URI: {' '}\n                                                        <a\n                                                            href={`${elem.uri}`}\n                                                            target=\"_blank\"\n                                                            rel=\"noreferrer\">\n                                                            {elem.uri}\n                                                        </a> - {elem.description}\n                                                    </div>\n                                                </div>\n                                                {/* Button allows user to select / deselect asset. Uses passed in 'frozen' and 'defaultSelected'\n                                                fields to allow / disable selecting. */}\n                                                <div className='blockin-listitem-button'>\n                                                    {selectedResources.includes(elem.uri) ?\n                                                        <button className='blockin-button' disabled={elem.frozen} onClick={() => {\n                                                            const newArr = selectedResources.filter(resource => resource !== elem.uri)\n                                                            setSelectedResources(newArr);\n                                                        }}>\n                                                            Selected {elem.frozen && <LockIcon />}\n                                                        </button> :\n                                                        <button className='blockin-button' disabled={elem.frozen} onClick={() => {\n                                                            const newArr = [...selectedResources, elem.uri]\n                                                            setSelectedResources(newArr);\n                                                        }}>\n                                                            Not Selected {elem.frozen && <LockIcon />}\n                                                        </button>\n                                                    }\n                                                </div>\n                                            </div>\n                                        </>\n                                    })}\n                                </>}\n                            </>}\n                        </div>\n\n                        {/* Section where user can add custom resources to challenge, if allowed */}\n                        <div className='blockin-custom-add-resources'>\n                            {(canAddCustomAssets || canAddCustomUris) &&\n                                <>\n                                    <hr />\n                                    <h3>Add Custom Resources</h3>\n                                    {<p><Link url={challengeParams.domain} /> is allowing you to add your own custom resources to this sign-in attempt below. </p>}\n                                    {<p>{customAddResourcesMessage}</p>}\n                                    <hr />\n\n                                    {canAddCustomAssets && <>\n                                        <div className='blockin-addcustom'>\n                                            <h4>Add Custom Asset</h4>\n                                            <div>\n                                                <input className='blockin-input' value={assetId} type=\"text\" placeholder='Enter Asset ID #' onChange={e => setAssetId(e.target.value)} />\n                                            </div>\n                                            <div>\n                                                <button className='blockin-button'\n                                                    onClick={async () => {\n                                                        await addCustomResource(assetId, true);\n                                                        setAssetId('');\n                                                    }}\n                                                >\n                                                    Add Asset ID\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </>}\n                                    <hr />\n                                    {canAddCustomUris && <>\n                                        <div className='blockin-addcustom'>\n                                            <h4>Add Custom URI</h4>\n                                            <input className='blockin-input' value={uri} type=\"text\" placeholder='Enter URI' onChange={e => setUri(e.target.value)} />\n                                            <button className='blockin-button'\n                                                onClick={async () => {\n                                                    await addCustomResource(uri);\n                                                    setUri('');\n                                                }}\n                                            >\n                                                Add URI\n                                            </button>\n                                        </div>\n                                    </>}\n                                    <hr />\n                                </>\n                            }\n                        </div>\n\n                        {/* Here, we display a complete list of all the selected resources for the challenge */}\n                        <div className='blockin-selected-resources-summary'>\n                            {/* {console.log(selectedResources)} */}\n                            {selectedResources?.length > 0 && <><h3>Summary of Selected Resources</h3><p>Please take a moment to review all your selected resources for this sign-in attempt.</p><hr /></>}\n                            {/* First display selectable assets */}\n                            {displayedAssets.map(elem => {\n                                if (!selectedResources.includes(`Asset ID: ${elem.assetId}`)) return <></>;\n                                return <>\n                                    <div className='blockin-listitem'>\n                                        {/* Metadata includes 1) chain logo, 2) asset name, 3) link to asset, and \n                                                4) desccription of asset\n                                             */}\n                                        <div className='blockin-listitem-metadata'>\n                                            <div className='blockin-listitem-logo'>\n                                                <img src={chain.logo} height='50px' width='auto' />\n                                            </div>\n                                            <div>\n                                                <b>{elem.name}</b>\n                                                <br />\n                                                Asset ID:{' '}\n                                                <Link\n                                                    url={`https://testnet.algoexplorer.io/asset/${elem.assetId}`}\n                                                    text={elem.assetId}\n                                                /> - {elem.description}\n                                            </div>\n                                        </div>\n\n                                        {/* Button allows user to select / deselect asset. Uses passed in 'frozen' and 'defaultSelected'\n                                                fields to allow / disable selecting. */}\n                                        <div className='blockin-listitem-button'>\n                                            {selectedResources.includes(`Asset ID: ${elem.assetId}`) ?\n                                                <button\n                                                    className='blockin-button'\n                                                    onClick={() => {\n                                                        const newArr = selectedResources.filter(resource => resource !== `Asset ID: ${elem.assetId}`)\n                                                        setSelectedResources(newArr);\n                                                    }}\n                                                    disabled={elem.frozen}\n                                                >\n                                                    Selected {elem.frozen && <LockIcon />}\n                                                </button> :\n                                                <button\n                                                    className='blockin-button'\n                                                    disabled={elem.frozen}\n                                                    onClick={() => {\n                                                        const newArr = [...selectedResources, `Asset ID: ${elem.assetId}`]\n                                                        setSelectedResources(newArr);\n                                                    }}\n                                                >\n                                                    Not Selected {elem.frozen && <LockIcon />}\n                                                </button>\n                                            }\n                                        </div>\n                                    </div>\n                                </>\n                            })}\n\n                            {/* Display selectable URIs */}\n                            {displayedUris.map(elem => {\n                                if (!selectedResources.includes(`${elem.uri}`)) return <></>;\n                                return <>\n                                    <hr />\n                                    <div className='blockin-listitem'>\n                                        {/* Metadata includes 1) chain logo, 2) asset name, 3) link to asset, and \n                                                4) desccription of asset\n                                             */}\n                                        <div className='blockin-listitem-metadata'>\n                                            <div className='blockin-listitem-logo'>\n                                                <img src='https://cdn1.iconfinder.com/data/icons/color-bold-style/21/43-512.png' height='auto' width='50px' />\n                                            </div>\n                                            <div>\n                                                <b>{elem.name}</b>\n                                                <br />\n                                                URI: {' '}\n                                                <a\n                                                    href={`${elem.uri}`}\n                                                    target=\"_blank\"\n                                                    rel=\"noreferrer\">\n                                                    {elem.uri}\n                                                </a> - {elem.description}\n                                            </div>\n                                        </div>\n                                        {/* Button allows user to select / deselect asset. Uses passed in 'frozen' and 'defaultSelected'\n                                                fields to allow / disable selecting. */}\n                                        <div className='blockin-listitem-button'>\n                                            {selectedResources.includes(elem.uri) ?\n                                                <button className='blockin-button' disabled={elem.frozen} onClick={() => {\n                                                    const newArr = selectedResources.filter(resource => resource !== elem.uri)\n                                                    setSelectedResources(newArr);\n                                                }}>\n                                                    Selected {elem.frozen && <LockIcon />}\n                                                </button> :\n                                                <button className='blockin-button' disabled={elem.frozen} onClick={() => {\n                                                    const newArr = [...selectedResources, elem.uri]\n                                                    setSelectedResources(newArr);\n                                                }}>\n                                                    Not Selected {elem.frozen && <LockIcon />}\n                                                </button>\n                                            }\n                                        </div>\n                                    </div>\n                                </>\n                            })}\n\n                            {selectedResources.map(resource => {\n                                if (displayedAssets.find(elem => `Asset ID: ${elem.assetId}` === resource) || displayedUris.find(elem => elem.uri === resource)) return <></>;\n                                return <>\n                                    <hr />\n                                    <div className='blockin-listitem'>\n                                        {/* Metadata includes 1) chain logo, 2) asset name, 3) link to asset, and \n                                                4) desccription of asset\n                                             */}\n                                        <div className='blockin-listitem-metadata'>\n                                            <div className='blockin-listitem-logo'>\n                                                <img src='https://cdn4.iconfinder.com/data/icons/meBaze-Freebies/512/add-user.png' height='auto' width='50px' />\n                                            </div>\n                                            <div>\n                                                <b>User Added: {resource}</b>\n                                            </div>\n                                        </div>\n                                        {/* Button allows user to select / deselect asset. Uses passed in 'frozen' and 'defaultSelected'\n                                                fields to allow / disable selecting. */}\n                                        <div className='blockin-listitem-button'>\n                                            <button\n                                                className='blockin-button'\n                                                onClick={() => {\n                                                    const newArr = selectedResources.filter(elem => resource !== elem)\n                                                    setSelectedResources(newArr);\n                                                }}>\n                                                Remove\n                                            </button>\n                                        </div>\n                                    </div>\n                                </>\n                            })}\n                        </div>\n\n\n\n\n                        {/* Final Sign Challenge Button. Calls signChallenge() and verifyChallenge(). */}\n                        <div className='blockin-sign-challenge-button'>\n                            {selectedResources?.length == 0 && <hr />}\n                            <h3>Sign Challenge and Submit</h3>\n                            <p>The last step is for you to sign the message. Once you click the button below, this site will send a signature request to your {chain.name} wallet.</p>\n                            <button className='blockin-button' onClick={handleSignIn}>\n                                Sign In\n                            </button>\n\n                            {displayMessage && <b><p>Oops! We ran into an error.</p><p>Error message: {displayMessage}</p></b>}\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n        }\n    </div >;\n}\n\nexport default SignInWithBlockinButton","// Generated with util/create-component.js\nimport React from \"react\";\n\nimport { ChainSelectProps } from \"./ChainSelect.types\";\nimport { useEffect, useState } from \"react\";\nimport \"./ChainSelect.scss\";\nimport { ChainProps } from \"../SignInWithBlockinButton/SignInWithBlockinButton.types\";\nimport { getChain } from \"../SupportedChains\";\n\n/**\n * ChainSelect - Component to handle updating the chain for multi-chain dApps. This is to be used in conjunction\n * with the SignInWithBlockin button.\n */\nconst ChainSelect: React.FC<ChainSelectProps> = ({ chains, updateChain }) => {\n    const [chain, setChain] = useState<string>();\n    const [menuIsVisible, setMenuIsVisible] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (chains[0]) {\n            handleChainChange(chains[0]);\n        }\n    }, []);\n\n    const handleChainChange = (chain: ChainProps) => {\n        setChain(chain.name);\n        updateChain(chain);\n        if (menuIsVisible) {\n            setMenuIsVisible(false);\n        }\n    }\n\n    return <div className=\"blockin-chain-select blockin-global\">\n        <button className='blockin-button main-button' onClick={() => setMenuIsVisible(!menuIsVisible)}>\n            Selected Chain: {getChain(chain ? chain : '').name} <img className='blockin-chain-select-logo' src={getChain(chain ? chain : '').logo} height='20px' width='20px' />\n        </button>\n        <div>\n            {menuIsVisible && <div className='blockin-root'>\n                <div className=\"blockin-popup-container\">\n                    <div className=\"blockin-popup\">\n                        {/* Header with the Close Button */}\n                        <header className='blockin-header'>\n                            <span className=\"header-end\">\n\n                            </span>\n                            <section className=\"header-middle\">\n                                {/* Title and Chain Logo */}\n\n                                <h1>Chain Select</h1>\n                                <div className='blockin-header-chain-info'>\n                                </div>\n                            </section>\n\n                            <span className=\"header-end\">\n                                {/* Close Button */}\n                                <button className='blockin-closebutton' onClick={() => { setMenuIsVisible(!menuIsVisible) }} >\n                                    {/* CloseIcon SVG */}\n                                    <svg width={25} height={25} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\n                                        <path d=\"M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z\" />\n                                    </svg>\n                                </button>\n                            </span>\n                        </header>\n                        <hr />\n                        {\n                            chains.map(chain => {\n                                return <div key={chain.name}>\n                                    <button className='blockin-button' onClick={() => handleChainChange(chain)}>\n                                        Select {chain.name} <img className='blockin-chain-select-logo' height='20px' width='20px' src={getChain(chain.name).logo} />\n                                    </button>\n                                </div>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>}\n        </div>\n    </div>\n};\n\nexport default ChainSelect;\n\n"],"names":[],"mappings":"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"}